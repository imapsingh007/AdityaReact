trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  storageAccountName: 'your-storage-account-name'  # Ensure these are correctly set
  containerName: 'your-container-name'
  resourceGroupName: 'your-resource-group-name'
  servicePrincipalId: 'your-service-principal-id'
  servicePrincipalKey: 'your-service-principal-key'
  tenantId: 'your-tenant-id'

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'
        checkLatest: true

    - script: |
        echo "Source Directory: $(Build.SourcesDirectory)"
        npm install
        npm run build
      displayName: 'Install and Build'

    - script: |
        echo "Listing contents of $(Build.SourcesDirectory)..."
        ls -la $(Build.SourcesDirectory)
        echo "Listing contents of $(Build.SourcesDirectory)/build..."
        ls -la $(Build.SourcesDirectory)/build
      displayName: 'List Source and Build Directory Contents'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/build'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  dependsOn: Build
  jobs:
  - deployment: Deploy
    environment: 'Production'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop

          - script: |
              echo "Storage Account Name: $(storageAccountName)"
              echo "Container Name: $(containerName)"
              echo "Service Principal ID: $(servicePrincipalId)"
              echo "Tenant ID: $(tenantId)"

              az login --service-principal -u $(servicePrincipalId) -p $(servicePrincipalKey) --tenant $(tenantId)
              
              # Debugging to ensure correct variables
              echo "Deleting blobs from container: $(containerName) in storage account: $(storageAccountName)"
              
              az storage blob delete-batch --source $(containerName) --account-name $(storageAccountName)
              
              # Debugging to ensure correct path
              echo "Uploading files from path: $(Pipeline.Workspace)/drop/build to container: $(containerName)"
              
              az storage blob upload-batch --destination $(containerName) --source $(Pipeline.Workspace)/drop/build --account-name $(storageAccountName)
            displayName: 'Upload to Azure Blob Storage'
